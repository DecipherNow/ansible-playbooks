---

  - name: Create task definition sense
    ecs_taskdefinition:
      state: present
      family: "greymatter-sense"
      network_mode: awsvpc
      launch_type: FARGATE
      cpu: 512
      memory: 1024
      region: "{{ aws_region }}"
      execution_role_arn: "{{ ecs_instance_role }}"
      task_role_arn: "{{ ecs_instance_role }}"
      volumes:
      - name: certs
      containers:
      - name: "proxy-sense"
        essential: true
        image: "{{ greymatter_proxy_image }}"
        repositoryCredentials:
          credentialsParameter: "{{ credentials_parameter }}"
        dockerLabels:
          gm-cluster: "sidecar-sense"
        environment:
        - name: "ENVOY_ADMIN_LOG_PATH"
          value: "/dev/stdout"
        - name: "PROXY_DYNAMIC"
          value: true
        - name: "XDS_CLUSTER"
          value: sense
        - name: "XDS_HOST"
          value: localhost
        - name: "XDS_PORT"
          value: 50000
        - name: "XDS_NODE_ID"
          value: "default-node"
        portMappings:
        - containerPort: 9080
          hostPort: 9080
          protocol: tcp
        - containerPort: 8081
          hostPort: 8081
          protocol: tcp
        mountPoints:
        - containerPath: "/etc/proxy/tls/sidecar"
          sourceVolume: certs
        logConfiguration:
          logDriver: awslogs
          options:
            awslogs-group: openjobs
            awslogs-region: "{{ aws_region }}"
            awslogs-stream-prefix: web
      - name: sense
        essential: true
        image: "docker-greymatter.di2e.net/greymatter/gm-sense:latest"
        repositoryCredentials:
          credentialsParameter: "{{ credentials_parameter }}"
        dockerLabels:
          gm-cluster: "service-sense"
        environment:
        - name: "SAVED_MODEL_PATH"
          value: "/opt/gm-sense/sense/policy.pth"
        - name: "OC_API_TOKEN"
          value: "{{ lookup('aws_secret', 'sense-oc-api-token') }}"           
        portMappings:
        - containerPort: 8080
          hostPort: 8080
          protocol: tcp
        logConfiguration:
          logDriver: awslogs
          options:
            awslogs-group: openjobs
            awslogs-region: "{{ aws_region }}"
            awslogs-stream-prefix: web
    register: task_output

  - name: ECS service
    ecs_service:
      state: present
      name: sense
      cluster: "{{ cluster_name }}"
      region: "{{ aws_region }}"
      launch_type: FARGATE
      task_definition: "{{  task_output.taskdefinition[\"family\"]   }}:{{ task_output.taskdefinition[\"revision\"] }}"
      desired_count: 1
      network_configuration:
        assign_public_ip: true
        security_groups: "{{ security_group }}"
        subnets: "{{ subnet_list }}"
      load_balancers:
        - targetGroupArn: "{{ task_target_group }}"
          containerName: "proxy-sense"
          containerPort: 9080
    register: "ecs_service"
