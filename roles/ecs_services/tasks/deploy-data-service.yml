---

  - name: Create task definition data
    ecs_taskdefinition:
      state: present
      family: "greymatter-data"
      network_mode: awsvpc
      launch_type: FARGATE
      cpu: 512
      memory: 1024
      region: "us-east-1"
      execution_role_arn: "arn:aws:iam::706634194319:role/ecsInstanceRole"
      task_role_arn: "arn:aws:iam::706634194319:role/ecsInstanceRole"
      volumes:
      - name: certs
      - name: "mongo-data"
      containers:
      - name: "proxy-data"
        cpu: 256
        essential: true
        image: "docker-greymatter.di2e.net/greymatter/gm-proxy:0.8.1"
        repositoryCredentials:
          credentialsParameter: "arn:aws:secretsmanager:us-east-2:151736245382:secret:ecs-greymatter/zGREYMATTER-ci-6WOFGP"
        memory: 400
        dockerLabels:
          gm-cluster: "sidecar-data"
        environment:
        - name: "ENVOY_ADMIN_LOG_PATH"
          value: "/dev/stdout"
        - name: "PROXY_DYNAMIC"
          value: true
        - name: "XDS_CLUSTER"
          value: data
        - name: "XDS_HOST"
          value: localhost
        - name: "XDS_PORT"
          value: 50000
        - name: "XDS_NODE_ID"
          value: "default-node"
        portMappings:
        - containerPort: 9080
          hostPort: 9080
          protocol: tcp
        - containerPort: 8081
          hostPort: 8081
          protocol: tcp
        mountPoints:
        - containerPath: "/etc/proxy/tls/sidecar"
          sourceVolume: certs
        logConfiguration:
          logDriver: awslogs
          options:
            awslogs-group: openjobs
            awslogs-region: us-east-2
            awslogs-stream-prefix: web
      - name: data
        essential: true
        image: "docker-greymatter.di2e.net/greymatter/gm-data:latest"
        repositoryCredentials:
          credentialsParameter: "arn:aws:secretsmanager:us-east-2:151736245382:secret:ecs-greymatter/zGREYMATTER-ci-6WOFGP"
        dockerLabels:
          gm-cluster: "service-data"
        environment:
        - name: "GMDATA_NAMESPACE"
          value: world
        - name: "GMDATA_NAMESPACE_USERFIELD"
          value: email
        - name: "USES3"
          value: true
        - name: "AWS_S3_BUCKET" # todo: use separate bucket for ECS-specific data
          value: "decipher-development-data"
        - name: "AWS_S3_ENDPOINT"
        - name: "AWS_S3_PARTITION"
          value: gmdatax
        - name: "AWS_REGION"
          value: "us-east-2"
        - name: "AWS_ACCESS_KEY_ID" # todo: figure out how to lookup
          value: "{{ lookup('aws_secret', 'aws-access-key-id') }}"
        - name: "AWS_SECRET_ACCESS_KEY" # todo: figure out how to lookup
          value: "{{ lookup('aws_secret', 'aws-secret-access-key') }}"
        - name: "BIND_ADDRESS"
        - name: "BIND_PORT"
        - name: "DISABLE_LOOKUPS"
        - name: "DONT_PANIC"
        - name: "GMDATAX_CATCH_PANIC"
          value: true
        - name: "GMDATAX_SESSION_MAX"
          value: 10000
        - name: "HTTP_CACHE_SECONDS"
          value: 10
        - name: "IPFS_HOSTKEY"
        - name: "JWT_PUB" # todo: store secret in AWS Secrets Manager
          value: "{{ lookup('aws_secret', 'jwt-pub') }}"
        - name: "OBS_TOPIC_ERROR"
          value: "gmdatax-error"
        - name: "OBS_TOPIC_READ"
          value: "gmdatax-read"
        - name: "OBS_TOPIC_UPDATE"
          value: "gmdatax-update"
        - name: "LESS_CHATTY_INFO"
          value: false
        - name: "MASTERKEY"
          value: foo
        - name: "MONGO_INITDB_ROOT_USERNAME"
          value: "{{ lookup('aws_secret', 'mongo-user') }}"
        - name: "MONGO_INITDB_ROOT_PASSWORD"
          value: "{{ lookup('aws_secret', 'mongo-password') }}"
        - name: "MONGOHOST"
          value: "localhost:27017"
        - name: "MONGODB"
          value: data
        - name: "MONGOCERT"
        - name: "MONGOKEY"
        - name: "MONGOTRUST"
        - name: "PRETTY_PRINT"
        - name: "REKOGNITION_FACE_INDEX"
        - name: "S3_TASKS"
          value: 4096
        - name: "USEIPFS"
        - name: "ZEROLOG_LEVEL"
        - name: "JWT_API_KEY"
          value: "{{ lookup('aws_secret', 'data-jwt-api-key') }}"
        - name: "CLIENT_PREFIX"
          value: "/services/data/latest"
        - name: "CLIENT_JWT_PREFIX"
          value: "/jwt"
        - name: "CLIENT_JWT_ENDPOINT_ADDRESS"
          value: localhost
        - name: "CLIENT_JWT_ENDPOINT_PORT"
          value: 9080
        - name: "CLIENT_JWT_ENDPOINT_PREFIX"
          value: "/jwt"
        portMappings:
        - containerPort: 8181
          hostPort: 8181
          protocol: tcp
        logConfiguration:
          logDriver: awslogs
          options:
            awslogs-group: openjobs
            awslogs-region: us-east-2
            awslogs-stream-prefix: web
      - name: mongo
        essential: true
        image: "docker.io/centos/mongodb-32-centos7"
        repositoryCredentials:
          credentialsParameter: "arn:aws:secretsmanager:us-east-2:151736245382:secret:ecs-greymatter/zGREYMATTER-ci-6WOFGP"
        environment:
        - name: "MONGODB_USER"
          value: "{{ lookup('aws_secret', 'mongo-user') }}"
        - name: "MONGODB_PASSWORD"
          value: "{{ lookup('aws_secret', 'mongo-password') }}"
        - name: "MONGODB_ADMIN_PASSWORD"
          value: "{{ lookup('aws_secret', 'mongo-admin-password') }}"
        - name: "MONGODB_DATABASE"
          value: "data"
        portMappings:
        - containerPort: 27017
          hostPort: 27017
        mountPoints:
        - containerPath: "/var/lib/mongodb/data"
          sourceVolume: "mongo-data"
        logConfiguration:
          logDriver: awslogs
          options:
            awslogs-group: openjobs
            awslogs-region: us-east-2
            awslogs-stream-prefix: web
    register: task_output

  - name: ECS service
    ecs_service:
      state: present
      name: data
      cluster: "greymatter-ecs-cluster"
      region: "us-east-1"
      launch_type: FARGATE
      task_definition: "{{  task_output.taskdefinition[\"family\"]   }}:{{ task_output.taskdefinition[\"revision\"] }}"
      desired_count: 1
      network_configuration:
        assign_public_ip: true
        security_groups:
        - "sg-058ff37fcba82d64e"
        subnets:
        - "subnet-0e06fb4f956d9f5f8"
        - "subnet-0a0d8c7178470ccfd"
        - "subnet-04b7db2914fabe8e3"
      load_balancers:
        - targetGroupArn: "arn:aws:elasticloadbalancing:us-east-1:706634194319:targetgroup/greymatter-ecs-alb-tg-ip/826faf9b835b9140"
          containerName: "proxy-data"
          containerPort: 9080
    register: "ecs_service"
