---

- name: Create localhost cert base64 value
  slurp:
    src: /tmp/certs_dir/localhost.crt
  register: localhost_cert_base64_value
  tags: ijwt

- name: Create localhost key base64 value
  slurp:
    src: /tmp/certs_dir/localhost.key
  register: localhost_key_base64_value
  tags: ijwt

- name: Create trust cert base64 value
  slurp:
    src: /tmp/certs_dir/intermediate.crt
  register: trust_cert_base64_value
  tags: ijwt

- name: Create jwtES512 key base64 value
  slurp:
    src: /tmp/certs_dir/jwtES512.key
  register: jwtES512_key_base64_value
  tags: ijwt

- name: Set trust, cert, key and private_key value for internal jwt env vars
  set_fact:
    CERT_VALUE="{{ localhost_cert_base64_value.content }}"
    KEY_VALUE="{{ localhost_key_base64_value.content }}"
    TRUST_VALUE="{{ trust_cert_base64_value.content }}"
    JWT_KEY_VALUE="{{ jwtES512_key_base64_value.content }}"
  tags: ijwt

# Restart redis server. Otherwise get connection error
- name: Restart Redis server
  service: 
    name: redis-server
    state: restarted 
  tags: ijwt

- name: Create and run gm-jwt-security binary as a service
  include_role:
    name: ansible-role-systemd
    public: yes
    apply:
      tags:
        - ijwt
  when: ( ansible_distribution == 'Ubuntu' )
  tags: ijwt