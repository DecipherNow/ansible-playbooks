---

# - name: Extract localhost trust
#   shell: |
#     cat /tmp/certs_dir/intermediate.crt
#   register: trust_cert_value
#   tags: data

# - name: Extract  localhost cert
#   shell: |
#     cat /tmp/certs_dir/localhost.crt
#   register: localhost_cert_value
#   tags: data

# - name: Extract localhost key
#   shell: |
#     cat /tmp/certs_dir/localhost.key
#   register: localhost_key_value
#   tags: data

- name: Create gm-data leaf certs
  include_role:
    name: ansible-role-acert
    apply:
      tags:
        - data
  vars:
    acert_service: gm-data
  when: ( ansible_distribution == 'Ubuntu' )
  tags: data

- name: Create localhost cert base64 value
  slurp:
    src: /tmp/certs_dir/localhost.crt
  register: localhost_cert_base64_value
  tags: data

- name: Create localhost key base64 value
  slurp:
    src: /tmp/certs_dir/localhost.key
  register: localhost_key_base64_value
  tags: data

- name: Create trust cert base64 value
  slurp:
    src: /tmp/certs_dir/intermediate.crt
  register: trust_cert_base64_value
  tags: data

- name: Create jwtES512 pub key base64 value
  slurp:
    src: /tmp/certs_dir/jwtES512.key.pub
  register: jwtES512_key_pub_base64_value
  tags: data

- name: Set trust, cert, and key value for internal jwt env vars
  set_fact:
    CERT_VALUE="{{ localhost_cert_base64_value.content }}"
    KEY_VALUE="{{ localhost_key_base64_value.content }}"
    TRUST_VALUE="{{ trust_cert_base64_value.content }}"
    JWT_PUB_KEY_VALUE="{{ jwtES512_key_pub_base64_value.content }}"
  tags: data
  
- name: Create and run gm-data binary as a service
  include_role:
    name: ansible-role-systemd
    public: yes
    apply:
      tags:
        - data
  when: ( ansible_distribution == 'Ubuntu' )
  tags: data