---

- name: Create Service Directory
  file:
    path: /var/{{ systemd_service }}
    state: directory
    mode: u=rwx,g=rx,o=rx
    owner: "{{ service_user }}"
    group: "{{ service_group }}"

- name: Download Service Tar
  get_url:
    url: "{{ nexus_repo_url }}/{{ nexus_repo }}/{{ systemd_service }}/{{ nexus_tar_file }}"
    dest: "{{ base_path }}/"
    username: '{{ nexus_user }}'
    password: '{{ nexus_pw }}'
    owner: "{{ service_user }}"
    group: "{{ service_group }}"
    mode: '0664'
  # when: "{{ 'control' not in systemd_service}}"

- name: Extract Service Tar
  unarchive:
    src: "{{ base_path }}/{{ nexus_tar_file }}"
    dest: "{{ base_path }}"
    owner: "{{ service_user }}"
    group: "{{ service_group }}"
    extra_opts: [--strip-components=1]
    remote_src: yes
  # when: "{{ 'control' not in systemd_service}}"

# - name: Copy service files from local to server ## Temp task
#   copy:
#     src: "../../../../ubuntu-temp/{{ systemd_service }}/"
#     dest: "{{ base_path }}"
#     owner: "{{ service_user }}"
#     group: "{{ service_group }}"
#     mode: u=rwx,g=rx,o=rx
#   when: systemd_service == "gm-control"  or systemd_service == "gm-control-api"

- name: Update gm-jwt-security file name
  copy:
    src: "{{ base_path }}/gm-jwt-security.linux"
    dest: "{{ base_path }}/gm-jwt-security"
    owner: "{{ service_user }}"
    group: "{{ service_group }}"
    mode: u=rwx,g=rx,o=rx
    remote_src: yes
  when: systemd_service == "gm-jwt-security"

- name: Update gm-data file name
  copy:
    src: "{{ base_path }}/gmdatax.linux"
    dest: "{{ base_path }}/gmdatax"
    owner: "{{ service_user }}"
    group: "{{ service_group }}"
    mode: u=rwx,g=rx,o=rx
    remote_src: yes
  when: systemd_service == "gm-data"

# - name: Delete old gm-data file name
#   file: 
#     path: "{{ base_path }}/gmdatax.linux" 
#     state: absent
#   when: ("{{ systemd_service }}" == "gm-data"")

- name: Delete old gm-jwt-security file name
  file: 
    path: "{{ base_path }}/gm-jwt-security.linux" 
    state: absent
  when: systemd_service == "gm-jwt-security"

- name: Copy gm-control files to /usr/local/bin
  copy:
    src: "{{ base_path }}/"
    dest: /usr/local/bin/
    owner: "{{ service_user }}"
    group: "{{ service_group }}"
    mode: u=rwx,g=rx,o=rx
    remote_src: yes
  when: systemd_service == "gm-control"

- name: Update permissions of gm-control files
  file:
    path: "/usr/local/bin/{{ item }}"
    mode: u=rwx,g=rx,o=rx
  loop: "{{ gm_control_files }}"
  when: systemd_service == "gm-control"

- name: Add service environment file
  template:
    src: "{{ systemd_service }}_env_vars.j2"
    dest: "/var/{{ systemd_service }}/environment"
    owner: "{{ service_user }}"
    group: "{{ service_group }}"
    mode: 0755

- name: Create Systemd Service
  template:
    src: "service.j2"
    dest: "/lib/systemd/system/{{ systemd_service }}.service"
    owner: "{{ service_user }}"
    group: "{{ service_group }}"
    mode: 0755

- name: Create Rsyslog Config
  template:
    src: "rsyslog.conf.j2"
    dest: "/etc/rsyslog.d/30-{{ systemd_service }}.conf"
  notify:
    - Restart Rsyslog

- name: Enable Service
  systemd:
    name: "{{ systemd_service }}.service"
    enabled: yes
    masked: no
    daemon_reload: yes
    state: restarted

- name: Add logs to logrotate.d
  template:
    src: "logrotate.j2"
    dest: "/etc/logrotate.d/{{ systemd_service }}"

- name: Confirm Service is Running
  command: "systemctl status {{ systemd_service }}.service"
  register: service_status
  failed_when: "'running' not in service_status.stdout"
  changed_when: False