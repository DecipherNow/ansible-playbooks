---

  - name: Create task definition prometheus
    ecs_taskdefinition:
      state: present
      family: "greymatter-prometheus"
      network_mode: awsvpc
      launch_type: FARGATE
      cpu: 512
      memory: 1024
      region: "{{ aws_region }}"
      execution_role_arn: "{{ ecs_instance_role }}"
      task_role_arn: "{{ ecs_instance_role }}"
      volumes:
      - name: "certs"
      - name: "prometheus-configuration"
      - name: "prometheus-data"
      containers:
      - name: "proxy-prometheus"
        essential: true
        image: "{{ greymatter_proxy_image }}"
        repositoryCredentials:
          credentialsParameter: "{{ credentials_parameter }}"
        dockerLabels:
          gm-cluster: "sidecar-prometheus"
        environment:
        - name: "ENVOY_ADMIN_LOG_PATH"
          value: "/dv/stdout"
        - name: "PROXY_DYNAMIC"
          value: "true"
        - name: "SPIRE_PATH"
          value: "/run/spire/sockets/agent.sock"
        - name: "XDS_CLUSTER"
          value: "prometheus"
        - name: "XDS_HOST"
          value: "{{ elb_control }}"
        - name: "XDS_NODE_ID"
          value: "default"
        - name: "XDS_PORT"
          value: "50000"
        portMappings:
        - containerPort: 8080
          hostPort: 8080
          protocol: tcp
        - containerPort: 8081
          hostPort: 8081
          protocol: tcp
        mountPoints:
        - containerPath: "/etc/proxy/tls/sidecar"
          sourceVolume: certs
        logConfiguration:
          logDriver: awslogs
          options:
            awslogs-group: openjobs
            awslogs-region: "{{ aws_region }}"
            awslogs-stream-prefix: web
      - name: prometheus
        essential: false
        image: "prom/prometheus:v2.7.1"
        dockerLabels:
          gm-cluster: "service-prometheus"
        portMappings:
        - containerPort: 9090
          hostPort: 9090
          protocol: tcp
        mountPoints:
        - containerPath: "/etc/prometheus"
          sourceVolume: "prometheus-configuration"
        - containerPath: "/var/lib/prometheus/data"
          sourceVolume: "prometheus-data"
        logConfiguration:
          logDriver: awslogs
          options:
            awslogs-group: openjobs
            awslogs-region: "{{ aws_region }}"
            awslogs-stream-prefix: web
    register: task_output

  - name: ECS service for Prometheus
    ecs_service:
      state: present
      name: prometheus
      cluster: "{{ cluster_name }}"
      region: "{{ aws_region }}"
      launch_type: FARGATE
      task_definition: "{{  task_output.taskdefinition[\"family\"]   }}:{{ task_output.taskdefinition[\"revision\"] }}"
      desired_count: 1
      network_configuration:
        assign_public_ip: true
        security_groups: "{{ security_group }}"
        subnets: "{{ subnet_list }}"
    register: "ecs_service"
